{"version":3,"sources":["components/label/editable/EditableLabel.module.css","components/label/switch/LabelSwitch.module.css","utils/registerServiceWorker.ts","utils/backendCalls.ts","components/label/editable/EditableLabel.tsx","components/label/switch/LabelSwitch.tsx","views/Pins/PinView.tsx","components/overlay/modal/OverlayModal.tsx","views/Pins/PinViewModal.tsx","views/Schema/SchemaView.tsx","routing.tsx","views/GenericView.tsx","index.tsx"],"names":["module","exports","input","switch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","backendCalls","BackendCalls","prototype","getPins","schema","this","callGraphql","e","pins","sort","f","g","id","getSchemas","name","body","fetch","method","headers","Headers","Content-Type","JSON","stringify","query","response","json","err","editable_EditableLabel","_super","EditableLabel","props","context","_this","call","value","defaultvalue","onChange","bind","tslib_es6","render","react","className","EditableLabel_module_default","a","setState","target","onKeyPress","onBlur","onSumbit","which","blur","switch_LabelSwitch","LabelSwitch","index","defaultindex","onSave","onClick","title","tooltip","LabelSwitch_module_default","onMouseOut","switchlist","length","Pins_PinView","PinView","undefined","saveName","reactstrap_es","Row_default","filter","map","key","saveDefaultState","toastr","modal_OverlayModal","OverlayModal","modal","toggle","buttonLabel","isOpen","children","color","onSubmit","submitText","cancelText","Pins_PinViewModal","PinViewModal","modified","componentWillReceiveProps","nextProps","nextContext","saveNow","b","saveState","pin","splice","findIndex","push","views_Schema_SchemaView","SchemaView","hoverindex","newPinSchema","saveNewSchema","componentWillUpdate","nextState","placeholder","i","saveEditedPins","deleteSchema","routing","Routing","BrowserRouter","Route","exact","path","component","Home","About","Topics","Link","to","url","params","views_GenericView","GenericView","light","expand","href","navbar","Nav_default","react_dom","document","getElementById","URL","toString","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.33fe1791.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableLabel_input__2MCX0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"LabelSwitch_switch__aiIPQ\"};","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","class BackendCalls {\n\n    public getPins(then: (response: any) => void, error: (e: any) => void, schema?: number) {\n\n        let schemafilter = schema !== undefined ? \"(id:\" + schema + \")\" : \"\"\n\n        console.log(\"Remoe this workaround\")\n        // this is here because the backend does not find the pins of the schemas\n        schemafilter = \"\"\n\n        this.callGraphql(`\nquery{\n\tpins` + schemafilter + `{\n\t\tid\n\t\tname\n\t}\n}\n`, (e: any) => then(e.pins.sort((f: any, g: any) => f.id > g.id ? 1 : -1)), error);\n        // \t\tdefault:default_activated\n    }\n\n    public getSchemas(then: (response: any) => void, error: (e: any) => void) {\n        this.callGraphql(`\nquery{\nschema{\n\tname\n\tid\n\tactive\n}\n}\n`, (e: any) => then(e.schema.sort((f: any, g: any) => f.name > g.name ? 1 : -1)), error);\n    }\n\n    private callGraphql(body: string, then: (response: any) => void, error: (err: any) => void) {\n        fetch('http://localhost:9000/graphql', {\n            method: 'post',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify({\"query\": body})\n        }).then((response) => {\n            return response.json();\n        }).then((response) => {\n            then((response.data))\n        }).catch((err) => {\n            error(err)\n        });\n    }\n\n}\n\n\nexport default BackendCalls\n","import * as React from 'react'\nimport styles from './EditableLabel.module.css'\n\nclass EditableLabel extends React.Component<EditableLabelProps, EditableLabelStats> {\n\n\n    constructor(props: EditableLabelProps, context: any) {\n        super(props, context)\n        this.state = {value: props.value || \"\", defaultvalue: props.value || \"\"}\n        this.onChange = this.onChange.bind(this)\n    }\n\n    public render() {\n        return <input className={styles.input} value={this.state.value} onChange={(e: any) => this.setState({value: e.target.value})\n        } onKeyPress={this.onChange} onBlur={e => {\n            if (this.state.defaultvalue !== e.target.value) {\n                this.setState({defaultvalue: e.target.value})\n                this.props.onSumbit(e.target.value)\n            }\n        }}/>\n    }\n\n\n    private onChange(e: any) {\n        if (e.which === 9 || e.which === 13) {\n            e.target.blur()\n        }\n    }\n}\n\ninterface EditableLabelProps {\n    value?: string\n    onSumbit: (value: string) => void\n}\n\n\ninterface EditableLabelStats {\n    value: string\n    defaultvalue: string\n}\n\nexport default EditableLabel","import * as React from 'react'\nimport styles from './LabelSwitch.module.css'\n\nclass LabelSwitch extends React.Component<EditableLabelProps, EditableLabelStats> {\n\n    constructor(props: EditableLabelProps, context: any) {\n        super(props, context)\n\n        this.state = {index: props.defaultindex || 0, defaultindex: props.defaultindex || 0}\n        this.onSave = this.onSave.bind(this)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    public render() {\n        return <div title={this.props.tooltip} onClick={this.onClick} className={styles.switch} onMouseOut={this.onSave}>{this.props.switchlist[this.state.index][0]}</div>\n    }\n\n    private onClick(e: any) {\n        this.setState({index: this.state.index + 1 < this.props.switchlist.length ? this.state.index + 1 : 0})\n    }\n\n    private onSave() {\n        if (this.state.index !== this.state.defaultindex) {\n            this.setState({defaultindex: this.state.index})\n            this.props.onChange(this.props.switchlist[this.state.index][1])\n        }\n    }\n}\n\ninterface EditableLabelProps {\n    tooltip?: string\n    defaultindex?: number\n    switchlist: string[][]\n    onChange: (value: string) => void\n}\n\n\ninterface EditableLabelStats {\n    index: number\n    defaultindex: number\n}\n\nexport default LabelSwitch","import * as React from 'react'\nimport {Container, Table} from 'reactstrap'\nimport Row from 'reactstrap/lib/Row'\nimport BackendCalls from '../../utils/backendCalls'\nimport EditableLabel from '../../components/label/editable/EditableLabel'\nimport * as toastr from 'toastr'\nimport LabelSwitch from '../../components/label/switch/LabelSwitch'\n\nclass PinView extends React.Component<PinViewProps, PinViewStats> {\n\n\n    constructor(props: PinViewProps) {\n        super(props)\n\n        this.state = {pins: [undefined]}\n\n        const backend = new BackendCalls()\n        backend.getPins((e: any) => this.setState({pins: e}), (err: any) => console.error(err))\n        this.saveName = this.saveName.bind(this)\n    }\n\n    public render() {\n        return <Container>\n            <h1>Overview of all Pins</h1>\n            <Row>\n                <Table>\n                    <tbody>\n                    <tr>\n                        <th>Pinnumber</th>\n                        <th>Name</th>\n                        <th>Defaultvalue</th>\n                    </tr>\n\n                    {this.state.pins!.filter((e: any) => e !== undefined && e !== null).map((e: Pins) => <tr key={e.id}>\n                        <td>{e.id}</td>\n                        <td><EditableLabel value={e.name} onSumbit={(g: string) => this.saveName(e.id, g)}/></td>\n                        <td>{<LabelSwitch tooltip={\"Click to change\"} switchlist={[[\"Active\", \"true\"], [\"Deactivated\", \"false\"]]}\n                                          onChange={(g: string) => this.saveDefaultState(e.id, g)}/>}</td>\n                    </tr>)}\n                    </tbody>\n                </Table>\n            </Row>\n        </Container>\n    }\n\n    private saveName(id: number, value: string) {\n        console.log(\"SAVE : \" + id + \" with value: \" + value)\n        toastr.success(\"The changes have successfully been saved.\")\n        // @todo graphql implementieren\n    }\n\n    private saveDefaultState(id: number, value: string) {\n        console.log(\"SAVE : \" + id + \" with value: \" + value)\n        toastr.success(\"The changes have successfully been saved.\")\n        // @todo graphql implementieren\n    }\n\n}\n\ninterface PinViewProps {\n    pins?: [any]\n}\n\ninterface Pins {\n    id: number\n    name: string\n    default: number\n\n}\n\ninterface PinViewStats {\n    pins?: [any]\n}\n\nexport default PinView","import * as React from 'react';\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\n\nclass OverlayModal extends React.Component<ModalProps, ModalStats> {\n    public constructor(props: ModalProps) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    public render() {\n        return (\n            <div>\n                <div className={this.props.className} onClick={this.toggle}>{this.props.buttonLabel}</div>\n\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>{this.props.title}</ModalHeader>\n                    <ModalBody>\n                        {this.props.children}\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={() => {\n                            this.toggle()\n                            this.props.onSubmit()\n                        }}>{this.props.submitText || \"Ok\"}</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>{this.props.cancelText || \"Cancel\"}</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n\n    private toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n}\n\ninterface ModalProps {\n    title: string\n    buttonLabel: string\n    className?: string\n    cancelText?: string\n    submitText?: string\n    onSubmit: () => void\n}\n\ninterface ModalStats {\n    modal: boolean\n}\n\nexport default OverlayModal;","import * as React from 'react'\nimport {Container, Table} from 'reactstrap'\nimport Row from 'reactstrap/lib/Row'\nimport BackendCalls from '../../utils/backendCalls'\nimport LabelSwitch from '../../components/label/switch/LabelSwitch'\n\nclass PinViewModal extends React.Component<PinViewProps, PinViewStats> {\n\n    constructor(props: PinViewProps) {\n        super(props)\n\n        this.state = {pins: [undefined], modified: false}\n\n        new BackendCalls().getPins((e: any) => this.setState({pins: e}), (err: any) => console.error(err), props.schema !== -1 ? props.schema : undefined)\n        this.saveName = this.saveName.bind(this)\n    }\n\n\n    public componentWillReceiveProps(nextProps: Readonly<PinViewProps>, nextContext: any): void {\n        if (nextProps.saveNow && this.state.modified) {\n            this.setState({modified: false})\n            this.props.onSave(this.props.schema, this.state.pins!)\n        }\n    }\n\n\n    public render() {\n        return <Container>\n            <Row>\n                <Table>\n                    <tbody>\n                    <tr>\n                        <th>Pinnumber</th>\n                        <th>Name</th>\n                        <th>State</th>\n                    </tr>\n\n                    {this.state.pins!.filter((e: any) => e !== undefined && e !== null).sort((a: Pin, b: Pin) => a.id > b.id ? 1 : -1).map((e: Pin) => <tr key={e.id}>\n                        <td>{e.id}</td>\n                        <td>{e.name}</td>\n                        <td>{<LabelSwitch defaultindex={e.state} tooltip={\"Click to change\"} switchlist={[[\"unmodified\", \"2\"], [\"active\", \"1\"], [\"deactivated\", \"0\"]]}\n                                          onChange={(g: string) => this.saveState(e.id, g)}/>}</td>\n                    </tr>)}\n                    </tbody>\n                </Table>\n            </Row>\n        </Container>\n    }\n\n    private saveName(id: number, value: string) {\n        const pins: [Pin] = this.state.pins!\n        const pin: Pin = pins!.splice(pins!.findIndex((e: Pin) => e.id === id), 1)[0]\n\n        pin!.name = value\n        pins!.push(pin)\n\n        this.setState({pins, modified: true})\n    }\n\n    private saveState(id: number, value: string) {\n        const pins: [Pin] = this.state.pins!\n        const pin: Pin = pins!.splice(pins!.findIndex((e: Pin) => e.id === id), 1)[0]\n\n        pin!.state = +value\n        pins!.push(pin)\n\n        this.setState({pins, modified: true})\n    }\n\n\n}\n\ninterface PinViewProps {\n    pins?: [any]\n    schema: number\n    saveNow: boolean\n    onSave: (schema: number, pins: [any]) => void\n}\n\ninterface Pin {\n    id: number\n    name: string\n    state: number\n\n}\n\ninterface PinViewStats {\n    pins?: [any]\n    modified: boolean\n}\n\nexport default PinViewModal","import * as React from 'react'\nimport {Container, Table} from 'reactstrap'\nimport Row from 'reactstrap/lib/Row'\nimport BackendCalls from '../../utils/backendCalls'\nimport EditableLabel from '../../components/label/editable/EditableLabel'\nimport * as toastr from 'toastr'\nimport LabelSwitch from '../../components/label/switch/LabelSwitch'\nimport './SchemaView.css'\nimport OverlayModal from '../../components/overlay/modal/OverlayModal'\nimport PinViewModal from '../Pins/PinViewModal'\n\nclass SchemaView extends React.Component<PinViewProps, PinViewStats> {\n\n\n    constructor(props: PinViewProps) {\n        super(props)\n\n        this.state = {schema: [undefined], hoverindex: -1, saveNow: false, newPinSchema: [undefined]}\n\n        const backend = new BackendCalls()\n        backend.getSchemas((e: any) => this.setState({schema: e}), (err: any) => console.error(err))\n        this.saveName = this.saveName.bind(this)\n        this.saveNewSchema = this.saveNewSchema.bind(this)\n    }\n\n\n    public componentWillUpdate(nextProps: Readonly<PinViewProps>, nextState: Readonly<PinViewStats>, nextContext: any): void {\n        console.log(nextState.schema)\n    }\n\n    public render() {\n        return <Container>\n            <h1>Overview of all Schemas</h1>\n            <OverlayModal className={\"btn btn-primary\"} title={\"Add a new schema\"} buttonLabel={\"Add schema\"} onSubmit={this.saveNewSchema}>\n                <input placeholder={\"Name\"}/>\n                <PinViewModal schema={-1} saveNow={this.state.saveNow} onSave={(i: number, pins: [any]) => this.setState({newPinSchema: pins})}/>\n            </OverlayModal>\n            <Row>\n                <Table>\n                    <tbody>\n                    <tr>\n                        <th>Id</th>\n                        <th>Name</th>\n                        <th>Active</th>\n                        <th/>\n                        <th/>\n                    </tr>\n\n                    {this.state.schema!.filter((e: any) => e !== undefined && e !== null).map((e: Schema) =>\n                        <tr key={e.id} className={\"schemaview\"}>\n                            <td>{e.id}</td>\n                            <td><EditableLabel value={e.name} onSumbit={(g: string) => this.saveName(e.id, g)}/></td>\n                            <td>{<LabelSwitch tooltip={\"Click to change\"} switchlist={[[\"Active\", \"true\"], [\"Deactivated\", \"false\"]]}\n                                              onChange={(g: string) => this.saveDefaultState(e.id, g)}/>}</td>\n                            <td className={\"text-right\"}>\n\n                                <OverlayModal className={\"btn btn-warning hoverbutton\"} title={e.name} buttonLabel={\"Edit\"}\n                                              onSubmit={() => this.setState({saveNow: true})} submitText={\"Save\"}>\n                                    <PinViewModal schema={e.id} saveNow={this.state.saveNow} onSave={this.saveEditedPins}/>\n                                </OverlayModal>\n\n                                <OverlayModal className={\"btn btn-danger hoverbutton\"} submitText={\"Yes\"} title={\"Delete the following element?\"} buttonLabel={\"Delete\"}\n                                              onSubmit={() => this.deleteSchema(e.id)}>\n                                    <h3>{e.name}</h3>\n                                </OverlayModal>\n                            </td>\n                        </tr>)}\n                    </tbody>\n                </Table>\n            </Row>\n        </Container>\n    }\n\n    private saveNewSchema() {\n        this.setState({saveNow: true})\n        console.log(\"SAVE : \" + 2 + \" with value: \" + 2)\n        toastr.success(\"The changes have successfully been saved.\")\n        // @todo graphql implementieren\n    }\n\n    private saveName(id: number, value: string) {\n        console.log(\"SAVE : \" + id + \" with value: \" + value)\n        toastr.success(\"The changes have successfully been saved.\")\n        // @todo graphql implementieren\n    }\n\n    private saveDefaultState(id: number, value: string) {\n        console.log(\"SAVE : \" + id + \" with value: \" + value)\n        toastr.success(\"The changes have successfully been saved.\")\n        // @todo graphql implementieren\n    }\n\n    private deleteSchema(id: number) {\n        console.log(\"DELETE Schema : \" + id)\n        toastr.success(\"The schema was successfully delete.\")\n        // @todo graphql implementieren\n    }\n\n    private saveEditedPins(schema: number, pins: [any]) {\n        toastr.warning(\"Graphqlzeug implementieren und das vollgende schema verändern \" + this.props.schema)\n    }\n\n}\n\ninterface PinViewProps {\n    schema?: [any]\n}\n\ninterface Schema {\n    id: number\n    name: string\n    active: boolean\n\n}\n\ninterface PinViewStats {\n    schema?: [any]\n    hoverindex: number\n    saveNow: boolean\n    newPinSchema: [any]\n}\n\nexport default SchemaView","import * as React from \"react\";\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport PinView from './views/Pins/PinView'\nimport SchemaView from './views/Schema/SchemaView'\n\nclass Routing extends React.Component<{}, {}> {\n\n\n    constructor(props: {}, context: any) {\n        super(props, context)\n    }\n\n    public render() {\n        return <Router>\n            <div>\n                {/*<this.Header/>*/}\n                {this.props.children}\n\n                <Route exact={true} path=\"/\" component={this.Home}/>\n                <Route path=\"/about\" component={this.About}/>\n                <Route path=\"/topics\" component={this.Topics}/>\n                <Route exact={true} path={\"/pins\"} component={PinView}/>\n                <Route exact={true} path={\"/schema\"} component={SchemaView}/>\n            </div>\n        </Router>\n    };\n\n    private Home() {\n        return <div><h2>Home</h2>Home page, have fun </div>\n    }\n\n    private About() {\n        return <h2>About</h2>\n    }\n\n    private Topics(match: any) {\n\n        const defaultroute = (url: any) => {\n            console.log(url)\n            return <h3>Requested Param: {url.match.params.id}</h3>\n        }\n\n        const Select = () => {\n            return <h3>Please select a topic.</h3>\n        }\n        return <div>\n            <h2>Topics</h2>\n\n            <ul>\n                <li>\n                    <Link to={`${match.match.url}/components`}>Components</Link>\n                </li>\n                <li>\n                    <Link to={`${match.match.url}/props-v-state`}>Props v. State</Link>\n                </li>\n            </ul>\n\n            <Route path={`${match.match.path}/:id`} component={defaultroute}/>\n            <Route\n                exact={true}\n                path={match.match.path}\n                render={Select}\n            />\n        </div>\n    }\n\n\n    // private Header() {\n    //     return <ul>\n    //         <li>\n    //             <Link to=\"/\">Home</Link>\n    //         </li>\n    //         <li>\n    //             <Link to=\"/about\">About</Link>\n    //         </li>\n    //         <li>\n    //             <Link to=\"/topics\">Topics</Link>\n    //         </li>\n    //     </ul>\n    // }\n}\n\nexport default Routing;\n","import * as React from 'react';\nimport {Collapse, Navbar, NavbarBrand, NavbarToggler, NavItem} from 'reactstrap'\nimport Nav from 'reactstrap/lib/Nav'\nimport {Link} from 'react-router-dom'\nimport Routing from '../routing'\n\nclass GenericView extends React.Component<{}, GenericViewStats> {\n    public constructor(props: any) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n\n    public render() {\n        return (\n            <Routing>\n                <div>\n                    <Navbar color=\"primary\" light={true} expand=\"md\">\n                        <NavbarBrand href=\"/\">HeizungsPi</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle}/>\n\n                        <Collapse isOpen={this.state.isOpen} navbar={true}>\n                            <Nav className=\"ml-auto\" navbar={true}>\n                                <NavItem>\n                                    <Link className={\"nav-link\"} to=\"/pins\">Pins</Link>\n                                </NavItem>\n                                <NavItem>\n                                    <Link className={\"nav-link\"} to=\"/schema\">Schema</Link>\n                                </NavItem>\n                                <NavItem>\n                                    <Link className={\"nav-link\"} to=\"/active\">Active</Link>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </Navbar>\n                </div>\n            </Routing>\n        );\n    }\n\n    private toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n}\n\n\ninterface GenericViewStats {\n    isOpen: boolean\n}\n\nexport default GenericView;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport registerServiceWorker from './utils/registerServiceWorker';\nimport './assets/bootstrap.min.css'\nimport './assets/toastr.min.css'\nimport GenericView from './views/GenericView'\n\nReactDOM.render(\n    <GenericView/>,\n    document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}